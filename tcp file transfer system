PROGRAM CODING: 
arpclient.java import java.io.*; import java.net.*; import java.util.*; public class arpc
{ 
public static void main(String args[]) 
{ 
try 
{ 
BufferedReader in=new BufferedReader(new InputStreamReader(System.in)); Socket clsct=new Socket("127.0.0.1",200); 
DataInputStream din=new DataInputStream(clsct.getInputStream()); DataOutputStreamdout=new DataOutputStream(clsct.getOutputStream()); System.out.println("Enter the Logical address(IP):"); 
String str1=in.readLine(); dout.writeBytes(str1+'\n'); String str=din.readLine(); 
System.out.println("The Physical Address is: "+str); clsct.close(); 
} 
catch (Exception e) 
{ 
System.out.println(e); 
} 
} 
} 
arpServer.java import java.io.*; import java.net.*; import java.util.*; 
public class arpServer { 
public static void main(String args[]) 
{ 
try 
{ 
ServerSocketobj=new ServerSocket(2005); Socket obj1=obj.accept(); 
while(true) 
{ 
DataInputStream din=new DataInputStream(obj1.getInputStream()); DataOutputStreamdout=new DataOutputStream(obj1.getOutputStream()); String str=din.readLine(); 
String ip[]={"165.165.80.80","165.165.79.1"}; 
String mac[]={"6A:08:AA:C2","8A:BC:E3:FA"}; 
for(int i=0;i<ip.length;i++) 
{ 
if(str.equals(ip[i])) 
{ 
dout.writeBytes(mac[i]+'\n'); break;
} 
}obj.close(); 
} 
} 
catch(Exception e) 
{ 
System.out.println(e); 
} 
} 
}

OUTPUT: 
arpClientD:\>javac arpc.java D:\>java arpc
Enter the Logical address(IP): 165.165.80.80 
The Physical Address is:6A:08:AA:C2
ar
 123 changes: 123 additions & 0 deletions123  
32.dvr
@@ -0,0 +1,123 @@
PROGRAM CODING: 
import java.io.*; public class DVR 
{ 
static int graph[][]; static int via[][]; static int rt[][]; static int v; 
static int e; 
public static void main(String args[]) throws IOException
{ 
BufferedReaderbr = new BufferedReader(new InputStreamReader(System.in)); System.out.println("Please enter the number of Vertices: "); 
v = Integer.parseInt(br.readLine()); System.out.println("Please enter the number of Edges: "); e = Integer.parseInt(br.readLine()); 
graph = new int[v][v]; via = new int[v][v]; 
rt = new int[v][v]; for(int i = 0; i< v; i++) for(int j = 0; j < v; j++) 
{ 
if(i == j) graph[i][j] = 0; else 
graph[i][j] = 9999; 
} 
for(int i = 0; i< e; i++) 
{ 
System.out.println("Please enter data for Edge " + (i + 1) + ":"); System.out.print("Source: "); 
int s = Integer.parseInt(br.readLine()); s--; 
System.out.print("Destination: "); 
int d = Integer.parseInt(br.readLine()); d--; 
System.out.print("Cost: "); 
int c = Integer.parseInt(br.readLine()); graph[s][d] = c; 
graph[d][s] = c; 
} 
dvr_calc_disp("The initial Routing Tables are: "); 
System.out.print("Please enter the Source Node for the edge whose cost has changed: "); int s = Integer.parseInt(br.readLine()); 
s--; 
System.out.print("Please enter the Destination Node for the edge whose cost has changed: "); 
int d = Integer.parseInt(br.readLine()); d--; 
System.out.print("Please enter the new cost: "); int c = Integer.parseInt(br.readLine()); graph[s][d] = c; 
graph[d][s] = c; 
dvr_calc_disp("The new Routing Tables are: "); 
} 
static void dvr_calc_disp(String message) 
{ 
System.out.println(); init_tables(); update_tables(); System.out.println(message); print_tables(); System.out.println(); 
} 
static void update_table(int source) 
{ 
for(int i = 0; i< v; i++) 
{ 
if(graph[source][i] != 9999) 
{ 
int dist = graph[source][i]; for(int j = 0; j < v; j++) 
{ 
int inter_dist = rt[i][j]; if(via[i][j] == source) inter_dist = 9999; 
if(dist + inter_dist< rt[source][j]) 
{ 
rt[source][j] = dist + inter_dist; via[source][j] = i; 
} 
} 
} 
} 
} 
static void update_tables() 
{ 
int k = 0; 
for(int i = 0; i< 4*v; i++) 
{ 
update_table(k); k++; 
if(k == v) k = 0; 
} 
} 
static void init_tables() 
{ 
for(int i = 0; i< v; i++) 
{ 
for(int j = 0; j < v; j++) 
{ 
if(i == j) 
{ 
rt[i][j] = 0;
45 Dept. of IT / CS8591 NetwoksLab
via[i][j] = i; 
} 
else 
{ 
rt[i][j] = 9999; 
via[i][j] = 100; 
} 
} 
} 
} 
static void print_tables() 
{ 
for(int i = 0; i< v; i++) 
{ 
for(int j = 0; j < v; j++) 
{ 
System.out.print("Dist: " + rt[i][j] + " "); 
} 
System.out.println(); 
} 
} 
} 
OUTPUT: 
Please enter the number of Vertices: 4 Please enter the number of Edges: 5 Please enter data for Edge 1: 
Source: 1 
Destination: 2 
Cost: 1 
Please enter data for Edge 2: Source: 1 
Destination: 3 
Cost: 3 
Please enter data for Edge 3: Source: 2 
Destination: 3 
Cost: 1 
Please enter data for Edge 4: Source: 2 
Destination: 4 
Cost: 1 
Please enter data for Edge 5: Source: 3 
Destination: 4 
Cost: 4 
The initial Routing Tables are: Dist: 0 	Dist: 1 	Dist: 2 	Dist: 2 
Dist: 1 	Dist: 0 	Dist: 1 	Dist: 1 
Dist: 2 	Dist: 1 	Dist: 0 	Dist: 2 
Dist: 2 	Dist: 1 	Dist: 2 	Dist: 0 
Please enter the Source Node for the edge whose cost has changed: 2 Please enter the Destination Node for the edge whose cost has changed: 4 Please enter the new cost: 10 
The new Routing Tables are: Dist: 0 Dist: 1 Dist: 2 Dist: 6 
Dist: 1 Dist: 0 Dist: 1 Dist: 5 
Dist: 2 Dist: 1 Dist: 0 Dist: 4 
Dist: 6 Dist: 5 Dist: 4 Dist: 0

 41 changes: 41 additions & 0 deletions41  
33.tcp file transer
@@ -0,0 +1,41 @@
PROGRAM CODING: 
ftpclient.java import java.net.*; import java.io.*; 
public class ftpclient { 
public static void main(String args[])throws Exception 
{ 
Socket sock=new Socket("127.0.0.1",3000); System.out.println("Enter the filename:"); 
BufferedReaderkeyRead=new BufferedReader (new InputStreamReader(System.in)); String fname=keyRead.readLine(); 
OutputStreamostream=sock.getOutputStream(); PrintWriterpwrite=new PrintWriter(ostream,true); pwrite.println(fname); 
InputStreamistream=sock.getInputStream(); 
BufferedReadersocketRead=new BufferedReader(new InputStreamReader(istream)); String str; 
while((str=socketRead.readLine())!=null) 
{ 
System.out.println(str); 	
} 
pwrite.close(); socketRead.close(); keyRead.close(); 
} 
} 
ftpserver.java 
import java.io.*; import java.net.*; public class ftpserver { 
public static void main(String args[])throws Exception 
{ 
ServerSocketsersock=new ServerSocket(3000); System.out.println("Server ready for connection"); Socket sock=sersock.accept(); 
System.out.println("connection is successful and waiting for chatting"); InputStreamistream=sock.getInputStream(); 
BufferedReaderfileRead=new BufferedReader(new InputStreamReader(istream)); String fname=fileRead.readLine(); 
BufferedReadercontentRead=new BufferedReader (new FileReader(fname)); OutputStreamostream=sock.getOutputStream(); 
PrintWriterpwrite=new PrintWriter(ostream,true); String str; while((str=contentRead.readLine())!=null) 
{ 
pwrite.println(str); 
} 
sock.close(); sersock.close(); pwrite.close(); fileRead.close();
contentRead.close(); 
} 
} 
OTUPUT: 
ftpclient
Z:\CN\FTP>java ftpclient Enter the filename: 
ftp.txt Hello FTP 
ftpserver
Z:\CN\FTP>java ftpserver Server ready for connection 
connection is successful and waiting for chatting

 97 changes: 97 additions & 0 deletions97  
34.stumalation correction code
@@ -0,0 +1,97 @@
PROGRAM CODING: 
import java.util.*; class CRC { 
public static void main(String args[]) { 
Scanner scan = new Scanner(System.in); int n; 
System.out.println("Enter the size of the data:"); n = scan.nextInt(); 
int data[] = new int[n]; System.out.println("Enter the data, bit by bit:"); for(int i=0 ; i< n ; i++) { 
System.out.println("Enter bit number " + (n-i) + ":"); data[i] = scan.nextInt(); 
} 	
System.out.println("Enter the size of the divisor:"); n = scan.nextInt(); 
int divisor[] = new int[n]; System.out.println("Enter the divisor, bit by bit:"); for(int i=0 ; i< n ; i++) { 
System.out.println("Enter bit number " + (n-i) + ":"); divisor[i] = scan.nextInt(); 
} 
int remainder[] = divide(data, divisor); for(int i=0 ; i< remainder.length-1 ; i++) { 
System.out.print(remainder[i]); 
} 
System.out.println("\nThe CRC code generated is:"); for(int i=0 ; i<data.length ; i++) { 
System.out.print(data[i]); 
} 
for(int i=0 ; i< remainder.length-1 ; i++) { System.out.print(remainder[i]); 
} 
System.out.println(); 
int sent_data[] = new int[data.length + remainder.length - 1]; System.out.println("Enter the data to be sent:"); 
for(int i=0 ; i<sent_data.length ; i++) { 
System.out.println("Enter bit number " + (sent_data.length-i)+ ":"); sent_data[i] = scan.nextInt(); 
} 
receive(sent_data, divisor); 
} 
static int[] divide(int old_data[], int divisor[]) { int remainder[] , i; 
int data[] = new int[old_data.length + divisor.length]; System.arraycopy(old_data, 0, data, 0, old_data.length); remainder = new int[divisor.length]; System.arraycopy(data, 0, remainder, 0, divisor.length); for(i=0 ; i<old_data.length ; i++) { 
System.out.println((i+1) + ".) First data bit is : "+ remainder[0]); System.out.print("Remainder : "); 
if(remainder[0] == 1) { 
for(int j=1 ; j <divisor.length ; j++) {

remainder[j-1] = exor(remainder[j], divisor[j]); System.out.print(remainder[j-1]); 
} 
} 
else { 
for(int j=1 ; j <divisor.length ; j++) { remainder[j-1] = exor(remainder[j], 0); System.out.print(remainder[j-1]); 
} 
} 
remainder[divisor.length-1] = data[i+divisor.length]; System.out.println(remainder[divisor.length-1]); 
} 
return remainder; 
} 
static int exor(int a, int b) { 
if(a == b) { 
return 0; 
} 
return 1; 
} 
static void receive(int data[], int divisor[]) { 
int remainder[] = divide(data, divisor); for(int i=0 ; i<remainder.length ; i++) { 
if(remainder[i] != 0) { 
System.out.println("There is an error in received data..."); return; 
} 
} 
System.out.println("Data was received without any error."); 
} 
} OUTPUT: 
Enter the size of the data: 	7 
Enter the data, bit by bit: 
Enter bit number 7: 	1 
Enter bit number 6: 	0 
Enter bit number 5: 	0 
Enter bit number 4: 	1 
Enter bit number 3: 	1 
Enter bit number 2: 	0 
Enter bit number 1: 	1 
Enter the size of the divisor: 4 Enter the divisor, bit by bit: 
Enter bit number 4: 	1 
Enter bit number 3: 	0 
Enter bit number 2: 	1 
Enter bit number 1: 	1 
1.) First data bit is : 1 
Remainder : 0101 
2.) First data bit is : 0 
Remainder : 1010 
3.) First data bit is : 1 

Remainder : 0011 
4.) First data bit is : 0 Remainder : 0110 
5.) First data bit is : 0 Remainder : 1100 
6.) First data bit is : 1 Remainder : 1110 
7.) First data bit is : 1 Remainder : 1010 
101 
The CRC code generated is: 1001101101 Enter the data to be sent: 
Enter bit number 10: 1 
Enter bit number 9: 0 
Enter bit number 8: 0 
Enter bit number 7: 1 
Enter bit number 6: 1 
Enter bit number 5: 0 
Enter bit number 4: 1 
Enter bit number 3: 1 
Enter bit number 2: 0 
Enter bit number 1: 1 
First data bit is : 1 Remainder : 0101 2.) First data bit is : 0 Remainder : 1010 3.) First data bit is : 1 Remainder : 0011 4.) First data bit is : 0 Remainder : 0111 5.) First data bit is : 0 Remainder : 1110 6.) First data bit is : 1 Remainder : 1011 7.) First data bit is : 1 Remainder : 0000 8.) First data bit is : 0 Remainder : 0000 9.) First data bit is : 0 Remainder : 0000 10.) First data bit is : 0 Remainder : 0000 Data was received without any error.
 43 changes: 43 additions & 0 deletions43  
35 sliding window protocal (1).txt
@@ -0,0 +1,43 @@
PROGRAM CODING: 
// SENDER PROGRAM 
import java.net.*; import java.io.*; import java.rmi.*; public class slidsender
{public static void main(String a[])throws Exception 
{ServerSocket ser=new ServerSocket(10); Socket s=ser.accept(); 
DataInputStream in=new DataInputStream(System.in); DataInputStream in1=new DataInputStream(s.getInputStream()); String sbuff[]=new String[8]; 
PrintStream p; 
int sptr=0,sws=8,nf,ano,i; String ch; 
do 
{p=new PrintStream(s.getOutputStream()); System.out.print("Enter the no. of frames : "); nf=Integer.parseInt(in.readLine()); p.println(nf); 
if(nf<=sws-1) 
{System.out.println("Enter "+nf+" Messages to be send\n"); for(i=1;i<=nf;i++) 
{ sbuff[sptr]=in.readLine(); p.println(sbuff[sptr]); sptr=++sptr%8; } 
sws-=nf; 
System.out.print("Acknowledgment received"); ano=Integer.parseInt(in1.readLine()); System.out.println(" for "+ano+" frames"); sws+=nf; }
else 
{ System.out.println("The no. of frames exceeds window size"); break; } 
System.out.print("\nDo you wants to send some more frames : "); ch=in.readLine(); p.println(ch); } 
while(ch.equals("yes")); 
s.close(); } } 
//RECEIVER PROGRAM 
import java.net.*; import java.io.*; class slidreceiver
{ public static void main(String a[])throws Exception 
{ Socket s=new Socket(InetAddress.getLocalHost(),10); DataInputStream in=new DataInputStream(s.getInputStream()); PrintStream p=new PrintStream(s.getOutputStream()); 
int i=0,rptr=-1,nf,rws=8; String rbuf[]=new String[8]; String ch; System.out.println(); do
{ nf=Integer.parseInt(in.readLine()); if(nf<=rws-1) 
{ for(i=1;i<=nf;i++) 
{ rptr=++rptr%8; rbuf[rptr]=in.readLine(); 
System.out.println("The received Frame " +rptr+" is : "+rbuf[rptr]); } rws-=nf; 
System.out.println("\nAcknowledgment sent\n"); p.println(rptr+1); rws+=nf; } 
else break; 
ch=in.readLine(); } while(ch.equals("yes")); } } 
OUTPUT: 
//SENDER OUTPUT 
Enter the no. of frames : 4 Enter 4 Messages to be send hiii
how r u i am fine 
how is everyone 
Acknowledgment received for 4 frames 
Do you wants to send some more frames : no 
//RECEIVER OUTPUT 
The received Frame 0 is :hiii The received Frame 1 is : how r u 
The received Frame 2 is :i am fine 
The received Frame 3 is : how is everyone Acknowledgment sent
